---

apiVersion: v1
kind: Template
metadata:
  name: rhte-na-demo-template
  annotations:
    description: "Template creates a BuildConfig with Jenkins pipeline strategy and Job which watches a Git repo for changes and trigger a Build"
objects:
- kind: "BuildConfig"
  apiVersion: "v1"
  metadata:
    name: ${BUILD_NAME}
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-

          def apiPath = 'https://raw.githubusercontent.com/jmprusi/rhte-na-demo/master/apis/demo-api.yaml'

          pipeline {
              agent none
              stages {
                  stage('Build') {
                      steps {
                          script {
                              openshift.withCluster() {
                                  sh "wget -N -O /tmp/test-yaml.yaml $apiPath"
                                  openshift.apply(readFile('/tmp/test-yaml.yaml'))
                              }
                          }
                      }
                  }
                  stage('Testing') {
                      steps {
                          script {
                            echo "Example: Run Code + API tests"
                          }
                      }
                  }
                 stage('Promote API config to production') {
                   steps {
                     script { 
                      echo "Example: Promote API config to production"
                       }
                   }
                 }
              }
          }
        type: JenkinsPipeline
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: git-watcher
  spec:
    parallelism: 1
    completions: 1
    template:
      metadata:
        name: git-watcher
      spec:
        serviceAccountName: git-watcher
        containers:
        - name: git-watcher
          image: docker.io/philipgough/rhte-na-demo
          command: ["bash",  "/tmp/run.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BUILD_NAME
              value: ${BUILD_NAME}
        restartPolicy: OnFailure
parameters:
- description: The name of the build to start
  required: true
  name: BUILD_NAME
